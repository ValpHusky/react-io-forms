import _ from 'lodash'

/** 
 * Global IOForms library error class to indicate the library processess that an Input has encountered
 * an invalid state due to validation fail or another synthetic error 
 * */
export class InputError {
    /** 
     * Shortcut static function to throw an Input Error 
     * @param {string} message Message for the IOInput
     * @param {Array<string>|string} [names] Name(s) of the fields that this InputError targets. If no name is given, it will target all IOInputs within a IOForm
     * @param {Object} [data] Any other additional data you want to include in the error. When generated by the library this data includes the value
     * @static
     * */
    static throw(message, names = null, data = null) {
        throw new InputError(message, names, data)
    }
    /** 
     * @param {string} message Message for the IOInput
     * @param {Array<string>|string} [names] Name(s) of the fields that this InputError targets. If no name is given, it will target all IOInputs within a IOForm
     * @param {Object} [data] Any other additional data you want to include in the error. When generated by the library this data includes the value
     * */
    constructor(message, names = null, data = null) {
        this._names =  names ? _.isArray(names) ? names : [names] : null
        this._message = message
        this._data = data
    }
    /** 
     * Returns the array of IOInput names for this InputError 
     * @return {Array<string>}
     * */
    names() {
        return this._names
    }
    /** 
     * Returns the first name of IOInput names for this InputError 
     * @return {string}
     * */
    name() {
        return this._names[0]
    }
    /** 
     * Returns if the InputError list of names includes the given IOInput name
     * @return {boolean}
     * */
    includes(field) {
        return this._names ? this._names.includes(field) : false
    }
    /** 
     * Returns the message for this InputError 
     * @return {string}
     * */
    message() {
        return this._message
    }
    /** 
     * Returns the array of IOInput names for this InputError 
     * @return {string}
     * @override
     * */
    toString() {
        return this._message
    }
}